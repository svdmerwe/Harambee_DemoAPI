using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using EFDataAccessLibrary.DataAccess;
using EFDataAccessLibrary.Models;

namespace DemoAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class BundlesController : ControllerBase
    {
        private readonly DemoDataContext _context;
        private readonly log4net.ILog log;

        public BundlesController(DemoDataContext context)
        {
            _context = context;
            log = Program.log;
        }

        // GET: api/Bundles
        [HttpGet]
        public async Task<ActionResult<IEnumerable<Bundles>>> GetBundles()
        {
            log.Info("api/Bundles: Executed");
            //return await _context.Bundles.ToListAsync();
            return await _context.Bundles.Include(p => p.BundleItems).ToListAsync();
        }

        // POST: api/Bundles
        [HttpPost]
        public async Task<ActionResult<Bundles>> PostBundles(Bundles bundles)
        {
            log.Info("api/Bundles - Post: Executed");

            //SVDM - LINQ used to include LowLevel BundleItems into Bundle Object            
            await _context.Bundles.Include(b => b.BundleItems).ToListAsync();

            log.Info("api/Bundles - Post: Save Bundle to Context");
            _context.Bundles.Add(bundles);
            await _context.SaveChangesAsync();

            return CreatedAtAction("GetBundles", new { id = bundles.Id }, bundles);
        }

        #region Code Generated by Scaffolding Tool - Not Needed for Demo
        //// GET: api/Bundles/5
        //[HttpGet("{id}")]
        //public async Task<ActionResult<Bundles>> GetBundles(int id)
        //{
        //    var bundles = await _context.Bundles.FindAsync(id);

        //    if (bundles == null)
        //    {
        //        return NotFound();
        //    }

        //    return bundles;
        //}

        //// PUT: api/Bundles/5
        //// To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754
        //[HttpPut("{id}")]
        //public async Task<IActionResult> PutBundles(int id, Bundles bundles)
        //{
        //    if (id != bundles.Id)
        //    {
        //        return BadRequest();
        //    }

        //    _context.Entry(bundles).State = EntityState.Modified;

        //    try
        //    {
        //        await _context.SaveChangesAsync();
        //    }
        //    catch (DbUpdateConcurrencyException)
        //    {
        //        if (!BundlesExists(id))
        //        {
        //            return NotFound();
        //        }
        //        else
        //        {
        //            throw;
        //        }
        //    }

        //    return NoContent();
        //}



        //// DELETE: api/Bundles/5
        //[HttpDelete("{id}")]
        //public async Task<IActionResult> DeleteBundles(int id)
        //{
        //    var bundles = await _context.Bundles.FindAsync(id);
        //    if (bundles == null)
        //    {
        //        return NotFound();
        //    }

        //    _context.Bundles.Remove(bundles);
        //    await _context.SaveChangesAsync();

        //    return NoContent();
        //}

        //private bool BundlesExists(int id)
        //{
        //    return _context.Bundles.Any(e => e.Id == id);
        //} 
        #endregion
    }
}
